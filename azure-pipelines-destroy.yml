resources:
  repositories:
  - repository: MyGitHubRepo # The name used to reference this repository in the checkout step
    type: github
    endpoint: github.com_suthapai
    name: suthapai/Demo-infra-as-code
variables:
  - group: vnet-variables
  - group: vm-variables
  - group: acr_variables
trigger: 
 - main
   

pool:
  vmImage: ubuntu-latest

stages:
- stage: create_vnet
  jobs:
  - job: create_vnet_job
    displayName: Create Virtual Network
    steps:
    - checkout: MyGitHubRepo
    - task: TerraformInstaller@1
      inputs:
         terraformVersion: 'latest'
    - task: TerraformTaskV4@4
      displayName: Terraform Init_vnet
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/v-net'
        backendServiceArm: 'Azureportal-devops-sc'
        backendAzureRmResourceGroupName: 'rg-tfstate'
        backendAzureRmStorageAccountName: 'sgtfstatefile'
        backendAzureRmContainerName: 'mytfstate'
        backendAzureRmKey: 'vnet1.tfstate'
    - task: TerraformTaskV4@4
      displayName: Terraform destroyvnet
      inputs:
        provider: 'azurerm'
        command: 'destroy'
        workingDirectory: '$(System.DefaultWorkingDirectory)/v-net'
        environmentServiceNameAzureRM: 'Azureportal-devops-sc'
   

- stage: create_vm
  dependsOn: create_vnet
  jobs:
  - job: create_vm_agent_pool
    displayName: CreateVM
    steps:
      - checkout: MyGitHubRepo
      - task: TerraformInstaller@1
        inputs:
         terraformVersion: 'latest'
      - task: TerraformTaskV4@4
        displayName: Terraform init_vm
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/agent-vm'
          backendServiceArm: 'Azureportal-devops-sc'
          backendAzureRmResourceGroupName: 'rg-tfstate'
          backendAzureRmStorageAccountName: 'sgtfstatefile'
          backendAzureRmContainerName: 'mytfstate'
          backendAzureRmKey: 'vm.tfstate'
     
      - task: TerraformTaskV4@4
        displayName: Terraform destroy_vm
        inputs:
          provider: 'azurerm'
          command: 'destroy'
          environmentServiceNameAzureRM: 'Azureportal-devops-sc'
          workingDirectory: '$(System.DefaultWorkingDirectory)/agent-vm'
- stage: create_acr
  jobs:
  - job: create_acr_job
    displayName: Create Azure Container Registry
    steps:
    - checkout: MyGitHubRepo
    - task: TerraformInstaller@1
      inputs:
         terraformVersion: 'latest'
    - task: TerraformTaskV4@4
      displayName: Terraform Init_acr
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/private-acr'
        backendServiceArm: 'Azureportal-devops-sc'
        backendAzureRmResourceGroupName: 'rg-tfstate'
        backendAzureRmStorageAccountName: 'sgtfstatefile'
        backendAzureRmContainerName: 'mytfstate'
        backendAzureRmKey: 'acr.tfstate'
    - task: TerraformTaskV4@4
      displayName: Terraform destroy_acr
      inputs:
        provider: 'azurerm'
        command: 'destroy'
        workingDirectory: '$(System.DefaultWorkingDirectory)/private-acr'
        environmentServiceNameAzureRM: 'Azureportal-devops-sc'
   